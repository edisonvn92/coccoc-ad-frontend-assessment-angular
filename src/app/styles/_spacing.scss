$spacer: 1;
$max: null;
$baseSize: -50 !default;

$properties: (
  m: 'margin',
  p: 'padding',
);

$positions: (
  t: 'top',
  r: 'right',
  b: 'bottom',
  l: 'left',
);

$spacers: (
  1: $spacer * 0.25,
  2: $spacer * 0.5,
  3: $spacer,
  4: $spacer * 2,
);

@mixin spacing($spacer, $max) {
  @each $prop, $textProp in $properties {
    @while ($baseSize <= $max) {
      .#{$prop}-#{$baseSize} {
        #{$textProp}: #{$baseSize}px !important;
      }
      .#{$prop}x-#{$baseSize} {
        #{$textProp}-right: #{$baseSize}px !important;
        #{$textProp}-left: #{$baseSize}px !important;
      }
      .#{$prop}y-#{$baseSize} {
        #{$textProp}-top: #{$baseSize}px !important;
        #{$textProp}-bottom: #{$baseSize}px !important;
      }
      @each $pos, $textPos in $positions {
        .#{$prop}#{$pos}-auto {
          #{$textProp}-#{$textPos}: auto !important;
        }
        .#{$prop}#{$pos}-#{$baseSize} {
          #{$textProp}-#{$textPos}: #{$baseSize}px !important;
        }
      }
      $baseSize: $baseSize + $spacer;
    }
  }
}

@include spacing(1, 200);